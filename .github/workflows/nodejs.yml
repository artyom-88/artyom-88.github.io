name: NodeJS CI
on:
  pull_request:
    branches:
      - develop
      - master
jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        name: Install NodeJS
        with:
          node-version: '22'
      - uses: pnpm/action-setup@v4
        name: Install PNPM
        with:
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        name: PNPM cache
        with:
          path: |
            ${{ env.STORE_PATH }}
            ./node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
  build:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        name: Install NodeJS
        with:
          node-version: '22'
      - uses: pnpm/action-setup@v4
        name: Install PNPM
        with:
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        name: PNPM cache
        with:
          path: |
            ${{ env.STORE_PATH }}
            ./node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Lint
        run: pnpm lint
      - name: Test
        run: pnpm test:coverage
      - name: Build
        run: pnpm build:ci
  e2e:
    runs-on: ubuntu-latest
    needs: install
    timeout-minutes: 5
    env:
      VITE_API_URL: ${{ secrets.VITE_API_URL }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        name: Install PNPM
        with:
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        name: PNPM cache
        with:
          path: |
            ${{ env.STORE_PATH }}
            ./node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Get Playwright Version
        run: |
          VERSION_OUTPUT=$(pnpm exec playwright --version)
          PLAYWRIGHT_VERSION=$(echo $VERSION_OUTPUT | grep -o '[0-9]\+\.[0-9]\+' | head -1)
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV
      - name: Playwright Browsers Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright/
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps
      - name: Run Playwright tests
        run: pnpm exec playwright test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 10
